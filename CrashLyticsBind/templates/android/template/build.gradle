// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
	repositories {
		jcenter()
		google()
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:::ANDROID_GRADLE_PLUGIN::'
		
		// NOTE: Do not place your application dependencies here; they belong
		// in the individual module build.gradle files
		classpath 'com.google.gms:google-services:4.3.10'
		classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.0'
	}
}

allprojects {
	repositories {
		jcenter()
		google()
		mavenCentral()
	}::if ANDROID_GRADLE_BUILD_DIRECTORY::
	buildDir = "::ANDROID_GRADLE_BUILD_DIRECTORY::/::APP_FILE::/${project.name}"::end::
}

task clean(type: Delete) {
	delete rootProject.buildDir
}

wrapper {
	gradleVersion = '::ANDROID_GRADLE_VERSION::'
}

configure(subprojects.findAll {!it.file('build.gradle').exists() && it.file('build.xml').exists()}) {
	buildscript {
		repositories {
			jcenter()
			google()
		}
		
		dependencies {
			classpath 'com.android.tools.build:gradle:::ANDROID_GRADLE_PLUGIN::'
		}
	}
	
	apply plugin: 'android-library'
	
	android {
		compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
		buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
		
		sourceSets {
			main {
				manifest.srcFile 'AndroidManifest.xml'
				java.srcDirs = ['src']
				res.srcDirs = ['res']
			}
		}
	}
	
	dependencies {
		api fileTree(dir: 'libs', include: ['*.jar'])
		api project(':deps:extension-api')
	}
}
